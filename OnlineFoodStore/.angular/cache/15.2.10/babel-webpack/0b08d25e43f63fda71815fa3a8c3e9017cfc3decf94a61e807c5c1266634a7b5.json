{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FoodService {\n  constructor() {}\n  getAll() {\n    return [{\n      id: 1,\n      name: 'Pizza Pepperoni',\n      cookTime: '10-20',\n      price: 10,\n      favorite: false,\n      origins: ['italy'],\n      stars: 4.5,\n      imageUrl: '/assets/images/foods/food-1.jpg',\n      tags: ['FastFood', 'Pizza', 'Lunch']\n    }, {\n      id: 2,\n      name: 'Meatball',\n      price: 20,\n      cookTime: '20-30',\n      favorite: true,\n      origins: ['persia', 'middle east', 'china'],\n      stars: 4.7,\n      imageUrl: '/assets/images/foods/food-2.jpg',\n      tags: ['SlowFood', 'Lunch']\n    }, {\n      id: 3,\n      name: 'Hamburger',\n      price: 5,\n      cookTime: '10-15',\n      favorite: false,\n      origins: ['germany', 'us'],\n      stars: 3.5,\n      imageUrl: '/assets/images/foods/food-3.jpg',\n      tags: ['FastFood', 'Hamburger']\n    }, {\n      id: 4,\n      name: 'Fried Potatoes',\n      price: 2,\n      cookTime: '15-20',\n      favorite: true,\n      origins: ['belgium', 'france'],\n      stars: 3.3,\n      imageUrl: '/assets/images/foods/food-4.jpg',\n      tags: ['FastFood', 'Fry']\n    }, {\n      id: 5,\n      name: 'Chicken Soup',\n      price: 11,\n      cookTime: '40-50',\n      favorite: false,\n      origins: ['india', 'asia'],\n      stars: 3.0,\n      imageUrl: '/assets/images/foods/food-5.jpg',\n      tags: ['SlowFood', 'Soup']\n    }, {\n      id: 6,\n      name: 'Vegetables Pizza',\n      price: 9,\n      cookTime: '40-50',\n      favorite: false,\n      origins: ['italy'],\n      stars: 4.0,\n      imageUrl: '/assets/images/foods/food-6.jpg',\n      tags: ['FastFood', 'Pizza', 'Lunch']\n    }];\n  }\n  getAllTags() {\n    return [{\n      name: 'All',\n      count: 14\n    }, {\n      name: 'FastFood',\n      count: 4\n    }, {\n      name: 'Pizza',\n      count: 2\n    }, {\n      name: 'Lunch',\n      count: 3\n    }, {\n      name: 'SlowFood',\n      count: 2\n    }, {\n      name: 'Hamburger',\n      count: 1\n    }, {\n      name: 'Fry',\n      count: 1\n    }, {\n      name: 'Soup',\n      count: 1\n    }];\n  }\n  getAllFoodsBySearchTerm(searchTerm) {\n    return this.getAll().filter(food => food.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n  getAllFoodsByTag(tag) {\n    return tag === \"All\" ? this.getAll() : this.getAll().filter(food => food.tags?.includes(tag));\n  }\n  static #_ = this.ɵfac = function FoodService_Factory(t) {\n    return new (t || FoodService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FoodService,\n    factory: FoodService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"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","names":["FoodService","constructor","getAll","id","name","cookTime","price","favorite","origins","stars","imageUrl","tags","getAllTags","count","getAllFoodsBySearchTerm","searchTerm","filter","food","toLowerCase","includes","getAllFoodsByTag","tag","factory","providedIn"],"sourceRoot":"","sources":["D:\\STUDY\\Angular\\Projects\\onlineFoodStore\\src\\app\\services\\food\\food.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Food } from 'src/app/shared/models/Food';\nimport {Tag} from 'src/app/shared/models/Tag';\t\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n\n  constructor() { }\n\n  getAll(): Food[] {\n    return [\n      {\n        id: 1,\n        name: 'Pizza Pepperoni',\n        cookTime: '10-20',\n        price: 10,\n        favorite: false,\n        origins: ['italy'],\n        stars: 4.5,\n        imageUrl: '/assets/images/foods/food-1.jpg',\n        tags: ['FastFood', 'Pizza', 'Lunch'],\n      },\n      {\n        id: 2,\n        name: 'Meatball',\n        price: 20,\n        cookTime: '20-30',\n        favorite: true,\n        origins: ['persia', 'middle east', 'china'],\n        stars: 4.7,\n        imageUrl: '/assets/images/foods/food-2.jpg',\n        tags: ['SlowFood', 'Lunch'],\n      },\n      {\n        id: 3,\n        name: 'Hamburger',\n        price: 5,\n        cookTime: '10-15',\n        favorite: false,\n        origins: ['germany', 'us'],\n        stars: 3.5,\n        imageUrl: '/assets/images/foods/food-3.jpg',\n        tags: ['FastFood', 'Hamburger'],\n      },\n      {\n        id: 4,\n        name: 'Fried Potatoes',\n        price: 2,\n        cookTime: '15-20',\n        favorite: true,\n        origins: ['belgium', 'france'],\n        stars: 3.3,\n        imageUrl: '/assets/images/foods/food-4.jpg',\n        tags: ['FastFood', 'Fry'],\n      },\n      {\n        id: 5,\n        name: 'Chicken Soup',\n        price: 11,\n        cookTime: '40-50',\n        favorite: false,\n        origins: ['india', 'asia'],\n        stars: 3.0,\n        imageUrl: '/assets/images/foods/food-5.jpg',\n        tags: ['SlowFood', 'Soup'],\n      },\n      {\n        id: 6,\n        name: 'Vegetables Pizza',\n        price: 9,\n        cookTime: '40-50',\n        favorite: false,\n        origins: ['italy'],\n        stars: 4.0,\n        imageUrl: '/assets/images/foods/food-6.jpg',\n        tags: ['FastFood', 'Pizza', 'Lunch'],\n      },\n    ];\n  }\n\n  getAllTags(): Tag[] {\n    return [\n      { name: 'All', count: 14 },\n      { name: 'FastFood', count: 4 },\n      { name: 'Pizza', count: 2 },\n      { name: 'Lunch', count: 3 },\n      { name: 'SlowFood', count: 2 },\n      { name: 'Hamburger', count: 1 },\n      { name: 'Fry', count: 1 },\n      { name: 'Soup', count: 1 },\n    ];\n  }\n\n  getAllFoodsBySearchTerm(searchTerm:string):Food[]{\n    return  this.getAll().filter(food=>food.name.toLowerCase().includes(searchTerm.toLowerCase()))\n  }\n  getAllFoodsByTag(tag:string):Food[]{\n    return tag === \"All\"?this.getAll():this.getAll().filter(food=>food.tags?.includes(tag))\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}