{"ast":null,"code":"import { Cart } from 'src/app/shared/models/Cart';\nimport { CartItem } from 'src/app/shared/models/CartItem';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cart = new Cart();\n  }\n  addToCart(food) {\n    let cartItem = this.cart.items.find(item => item.food.id === food.id);\n    if (cartItem) {\n      this.changeQuantity(food.id, cartItem.quantity + 1);\n      return;\n    }\n    this.cart.items.push(new CartItem(food));\n  }\n  removeFromCart(foodId) {\n    this.cart.items = this.cart.items.filter(item => item.food.id != foodId);\n  }\n  changeQuantity(foodId, quantity) {\n    let cartItem = this.cart.items.find(item => item.food.id === foodId);\n    if (!cartItem) return;\n    cartItem.quantity = quantity;\n  }\n  getCart() {\n    return this.cart;\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,4BAA4B;AACjD,SAASC,QAAQ,QAAQ,gCAAgC;;AAMzD,OAAM,MAAOC,WAAW;EAHxBC;IAIU,SAAI,GAAQ,IAAIH,IAAI,EAAE;;EAE9BI,SAAS,CAACC,IAAU;IAClB,IAAIC,QAAQ,GAAG,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACL,IAAI,CAACM,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;IACrE,IAAGL,QAAQ,EAAC;MACV,IAAI,CAACM,cAAc,CAACP,IAAI,CAACM,EAAE,EAAEL,QAAQ,CAACO,QAAQ,GAAG,CAAC,CAAC;MACnD;;IAEF,IAAI,CAACN,IAAI,CAACC,KAAK,CAACM,IAAI,CAAC,IAAIb,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1C;EAEAU,cAAc,CAACC,MAAa;IAC1B,IAAI,CAACT,IAAI,CAACC,KAAK,GACf,IAAI,CAACD,IAAI,CAACC,KAAK,CAACS,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACL,IAAI,CAACM,EAAE,IAAIK,MAAM,CAAC;EACxD;EAEAJ,cAAc,CAACI,MAAa,EAAEH,QAAe;IAC3C,IAAIP,QAAQ,GAAG,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACL,IAAI,CAACM,EAAE,KAAKK,MAAM,CAAC;IACpE,IAAG,CAACV,QAAQ,EAAE;IACdA,QAAQ,CAACO,QAAQ,GAAGA,QAAQ;EAC9B;EAEAK,OAAO;IACL,OAAO,IAAI,CAACX,IAAI;EAClB;EAAC;qBAzBUL,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAiB,SAAXjB,WAAW;IAAAkB,YAFV;EAAM","names":["Cart","CartItem","CartService","constructor","addToCart","food","cartItem","cart","items","find","item","id","changeQuantity","quantity","push","removeFromCart","foodId","filter","getCart","factory","providedIn"],"sourceRoot":"","sources":["D:\\STUDY\\Angular\\Projects\\onlineFoodStore\\src\\app\\services\\cart\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cart } from 'src/app/shared/models/Cart';\nimport { CartItem } from 'src/app/shared/models/CartItem';\nimport { Food } from 'src/app/shared/models/Food';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private cart:Cart = new Cart();\n  \n  addToCart(food: Food):void{\n    let cartItem = this.cart.items.find(item => item.food.id === food.id);\n    if(cartItem){\n      this.changeQuantity(food.id, cartItem.quantity + 1);\n      return;\n    }\n    this.cart.items.push(new CartItem(food));\n  }\n\n  removeFromCart(foodId:number): void{\n    this.cart.items = \n    this.cart.items.filter(item => item.food.id != foodId);\n  }\n\n  changeQuantity(foodId:number, quantity:number){\n    let cartItem = this.cart.items.find(item => item.food.id === foodId);\n    if(!cartItem) return;\n    cartItem.quantity = quantity;\n  }\n\n  getCart():Cart{\n    return this.cart;\n  }\n}\n\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}